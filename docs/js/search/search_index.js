var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/RankupEvents.html",[0,0.465,1,0.863]],["body/interfaces/RankupEvents.html",[0,0.487,1,0.903,2,0.799,3,1.055,4,1.055,5,0.799,6,0.799,7,0.608,8,0.903,9,1.568,10,1.193,11,0.106,12,0.903,13,1.055,14,1.055,15,1.055,16,0.455,17,1.568,18,0.688,19,0.608,20,0.903,21,0.608,22,0.807,23,0.903,24,0.676,25,1.187,26,1.055,27,2.071,28,2.319,29,1.055,30,1.568,31,1.756,32,1.568,33,1.568,34,1.568,35,1.568,36,1.055,37,1.055,38,1.055,39,0.058,40,0.058]],["title/interfaces/XPMember.html",[0,0.465,18,0.465]],["body/interfaces/XPMember.html",[0,0.47,1,0.579,2,0.761,3,1.005,4,1.005,5,0.761,6,0.761,7,0.579,8,0.871,9,0.761,10,0.579,11,0.103,12,1.164,13,1.005,14,1.005,15,1.005,16,0.433,17,1.512,18,0.708,19,1.164,20,1.312,21,1.164,22,0.982,23,1.312,24,0.935,25,1.145,26,1.005,27,2.022,28,2.278,29,1.005,30,1.531,31,1.725,32,1.512,33,1.512,34,1.512,35,1.512,36,1.005,37,1.005,38,1.005,39,0.056,40,0.056]],["title/coverage.html",[41,2.009]],["body/coverage.html",[0,0.684,1,0.991,5,1.303,6,1.666,11,0.098,12,0.991,18,0.684,39,0.081,40,0.081,41,1.72,42,1.72,43,2.354,44,2.354,45,1.72,46,2.354,47,3.318,48,2.354,49,2.354,50,2.354,51,1.72,52,2.354,53,2.354]],["title/dependencies.html",[54,0.961,55,1.792]],["body/dependencies.html",[11,0.101,16,0.885,39,0.091,40,0.091,55,2.052,56,2.808,57,2.808,58,2.808]],["title/index.html",[7,0.731,59,1.736,60,1.736]],["body/index.html",[0,0.242,9,0.591,10,1.328,11,0.083,16,0.336,18,0.386,19,0.716,20,0.716,21,1.111,22,0.886,23,0.716,24,0.336,25,0.941,30,0.941,31,1.337,39,0.046,40,0.046,42,0.78,54,0.941,61,2.154,62,1.068,63,1.7,64,1.243,65,1.068,66,1.068,67,1.7,68,2.416,69,1.068,70,2.119,71,1.068,72,1.068,73,1.068,74,1.068,75,1.068,76,1.068,77,1.068,78,1.068,79,1.068,80,1.068,81,1.068,82,1.068,83,1.068,84,1.068,85,1.068,86,2.416,87,1.068,88,1.068,89,1.068,90,1.068,91,1.068,92,1.068,93,1.068,94,1.068,95,1.068,96,1.068,97,1.068,98,1.068,99,1.068,100,1.068,101,1.068,102,1.068,103,1.068,104,2.119,105,1.068,106,2.416,107,2.416,108,1.7,109,1.068,110,1.068,111,1.7,112,1.243,113,0.78,114,1.068,115,1.068,116,2.948,117,1.243,118,1.068,119,1.068,120,1.7,121,1.068,122,1.068,123,1.068,124,2.119,125,2.119,126,1.068,127,1.068,128,2.119,129,1.068,130,1.068,131,1.068,132,1.068,133,1.068,134,1.068,135,1.068,136,1.068,137,1.068,138,1.7,139,1.068,140,1.068,141,1.068,142,1.068,143,1.068,144,1.068]],["title/modules.html",[145,2.009]],["body/modules.html",[11,0.094,39,0.094,40,0.094,145,2.178]],["title/overview.html",[146,2.009]],["body/overview.html",[2,1.616,11,0.093,39,0.093,40,0.093,146,2.134,147,2.921]],["title/properties.html",[8,1.032,54,0.961]],["body/properties.html",[8,0.924,10,0.924,11,0.104,16,0.906,22,0.906,24,0.691,39,0.078,40,0.078,61,1.603,64,1.603,117,1.603,148,2.194,149,2.194,150,2.194,151,2.194,152,2.194,153,2.194,154,2.194,155,2.194,156,2.194,157,2.194,158,2.876,159,2.194,160,2.194,161,2.194,162,2.194,163,2.194,164,2.194]],["title/miscellaneous/variables.html",[165,1.268,166,1.792]],["body/miscellaneous/variables.html",[7,0.89,11,0.104,12,1.413,18,0.637,19,0.89,20,1.181,21,0.89,22,0.666,23,1.181,24,0.666,39,0.076,40,0.076,45,1.545,51,1.545,112,2.453,113,1.545,165,1.545,166,1.545,167,2.115,168,2.115,169,2.115,170,3.357]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":47,"title":{},"body":{"coverage.html":{}}}],["0.9.3",{"_index":149,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":48,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":49,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":50,"title":{},"body":{"coverage.html":{}}}],["14.8.0",{"_index":56,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":147,"title":{},"body":{"overview.html":{}}}],["7.0.1",{"_index":58,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":86,"title":{},"body":{"index.html":{}}}],["added",{"_index":76,"title":{},"body":{"index.html":{}}}],["affecting",{"_index":34,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["allows",{"_index":62,"title":{},"body":{"index.html":{}}}],["already",{"_index":132,"title":{},"body":{"index.html":{}}}],["amount",{"_index":110,"title":{},"body":{"index.html":{}}}],["author",{"_index":163,"title":{},"body":{"properties.html":{}}}],["baseinteraction",{"_index":14,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["basic",{"_index":91,"title":{},"body":{"index.html":{}}}],["bot",{"_index":65,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":157,"title":{},"body":{"properties.html":{}}}],["built",{"_index":81,"title":{},"body":{"index.html":{}}}],["called",{"_index":35,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["cause",{"_index":31,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"index.html":{}}}],["cause)xp.fetchxp(userid",{"_index":123,"title":{},"body":{"index.html":{}}}],["cause)xp.setxp(userid",{"_index":122,"title":{},"body":{"index.html":{}}}],["client",{"_index":96,"title":{},"body":{"index.html":{}}}],["client);once",{"_index":100,"title":{},"body":{"index.html":{}}}],["client.on('levelup",{"_index":142,"title":{},"body":{"index.html":{}}}],["come",{"_index":141,"title":{},"body":{"index.html":{}}}],["const",{"_index":97,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":41,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":63,"title":{},"body":{"index.html":{}}}],["customizable",{"_index":78,"title":{},"body":{"index.html":{}}}],["database",{"_index":128,"title":{},"body":{"index.html":{}}}],["default",{"_index":113,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["delete",{"_index":136,"title":{},"body":{"index.html":{}}}],["deleted",{"_index":137,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":55,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":150,"title":{},"body":{"properties.html":{}}}],["development",{"_index":75,"title":{},"body":{"index.html":{}}}],["discord",{"_index":61,"title":{},"body":{"index.html":{},"properties.html":{}}}],["discord.js",{"_index":16,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"dependencies.html":{},"index.html":{},"properties.html":{}}}],["discordrankup#levelup",{"_index":26,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["discordrankup#rankup",{"_index":36,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["documentation",{"_index":42,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["done",{"_index":101,"title":{},"body":{"index.html":{}}}],["early",{"_index":74,"title":{},"body":{"index.html":{}}}],["easy",{"_index":67,"title":{},"body":{"index.html":{}}}],["emit",{"_index":115,"title":{},"body":{"index.html":{}}}],["emitevent",{"_index":107,"title":{},"body":{"index.html":{}}}],["emitted",{"_index":120,"title":{},"body":{"index.html":{}}}],["event",{"_index":25,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"index.html":{}}}],["events",{"_index":138,"title":{},"body":{"index.html":{}}}],["exists",{"_index":133,"title":{},"body":{"index.html":{}}}],["export",{"_index":17,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["false",{"_index":134,"title":{},"body":{"index.html":{}}}],["features",{"_index":70,"title":{},"body":{"index.html":{}}}],["few",{"_index":139,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"coverage.html":{}}}],["first",{"_index":93,"title":{},"body":{"index.html":{}}}],["following",{"_index":129,"title":{},"body":{"index.html":{}}}],["function",{"_index":33,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["gain",{"_index":118,"title":{},"body":{"index.html":{}}}],["getting",{"_index":59,"title":{"index.html":{}},"body":{}}],["guild's",{"_index":109,"title":{},"body":{"index.html":{}}}],["guildid",{"_index":21,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["guildid)this",{"_index":124,"title":{},"body":{"index.html":{}}}],["here",{"_index":90,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":154,"title":{},"body":{"properties.html":{}}}],["https://discord",{"_index":155,"title":{},"body":{"properties.html":{}}}],["https://github.com/x404dev/discord",{"_index":158,"title":{},"body":{"properties.html":{}}}],["id",{"_index":108,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":43,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":13,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["initiate",{"_index":95,"title":{},"body":{"index.html":{}}}],["install",{"_index":84,"title":{},"body":{"index.html":{}}}],["installation",{"_index":82,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"overview.html":{}}}],["isc",{"_index":161,"title":{},"body":{"properties.html":{}}}],["keywords",{"_index":152,"title":{},"body":{"properties.html":{}}}],["level",{"_index":24,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["leveled",{"_index":29,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["levels",{"_index":117,"title":{},"body":{"index.html":{},"properties.html":{}}}],["levelup",{"_index":9,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"index.html":{}}}],["license",{"_index":160,"title":{},"body":{"properties.html":{}}}],["lightweight",{"_index":77,"title":{},"body":{"index.html":{}}}],["make",{"_index":71,"title":{},"body":{"index.html":{}}}],["managing",{"_index":103,"title":{},"body":{"index.html":{}}}],["many",{"_index":69,"title":{},"body":{"index.html":{}}}],["matching",{"_index":40,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["member",{"_index":28,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["message",{"_index":15,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["method",{"_index":130,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":165,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":145,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mongodb",{"_index":80,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":57,"title":{},"body":{"dependencies.html":{}}}],["mongoose.schema",{"_index":169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":140,"title":{},"body":{"index.html":{}}}],["need",{"_index":94,"title":{},"body":{"index.html":{}}}],["new",{"_index":51,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":73,"title":{},"body":{"index.html":{}}}],["npm",{"_index":83,"title":{},"body":{"index.html":{}}}],["number",{"_index":23,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":119,"title":{},"body":{"index.html":{}}}],["optional",{"_index":111,"title":{},"body":{"index.html":{}}}],["overview",{"_index":146,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":54,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["param",{"_index":27,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["pnpm",{"_index":87,"title":{},"body":{"index.html":{}}}],["promise",{"_index":126,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"properties.html":{}}}],["rank",{"_index":38,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["ranked",{"_index":37,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["ranks",{"_index":153,"title":{},"body":{"properties.html":{}}}],["rankup",{"_index":10,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"index.html":{},"properties.html":{}}}],["rankup.js.org",{"_index":156,"title":{},"body":{"properties.html":{}}}],["rankup/issues",{"_index":159,"title":{},"body":{"properties.html":{}}}],["rankupdocumentation",{"_index":88,"title":{},"body":{"index.html":{}}}],["rankupevents",{"_index":1,"title":{"interfaces/RankupEvents.html":{}},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"coverage.html":{}}}],["repository",{"_index":162,"title":{},"body":{"properties.html":{}}}],["require('discord",{"_index":98,"title":{},"body":{"index.html":{}}}],["required",{"_index":170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":39,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":125,"title":{},"body":{"index.html":{}}}],["simple",{"_index":151,"title":{},"body":{"properties.html":{}}}],["something",{"_index":143,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{}}}],["src/.../xpmember.ts",{"_index":167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/models/xpmember.ts",{"_index":45,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/types.ts",{"_index":6,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"coverage.html":{}}}],["start",{"_index":102,"title":{},"body":{"index.html":{}}}],["started",{"_index":60,"title":{"index.html":{}},"body":{}}],["statements",{"_index":44,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":20,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["system",{"_index":64,"title":{},"body":{"index.html":{},"properties.html":{}}}],["table",{"_index":53,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":52,"title":{},"body":{"coverage.html":{}}}],["true",{"_index":112,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":144,"title":{},"body":{"index.html":{}}}],["unique",{"_index":72,"title":{},"body":{"index.html":{}}}],["up",{"_index":30,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"index.html":{}}}],["usage",{"_index":92,"title":{},"body":{"index.html":{}}}],["use",{"_index":68,"title":{},"body":{"index.html":{}}}],["user",{"_index":116,"title":{},"body":{"index.html":{}}}],["user's",{"_index":104,"title":{},"body":{"index.html":{}}}],["userid",{"_index":19,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["uses",{"_index":79,"title":{},"body":{"index.html":{}}}],["value",{"_index":168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":46,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":166,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":148,"title":{},"body":{"properties.html":{}}}],["very",{"_index":66,"title":{},"body":{"index.html":{}}}],["view",{"_index":89,"title":{},"body":{"index.html":{}}}],["want",{"_index":127,"title":{},"body":{"index.html":{}}}],["whether",{"_index":114,"title":{},"body":{"index.html":{}}}],["x404dev",{"_index":164,"title":{},"body":{"properties.html":{}}}],["xp",{"_index":22,"title":{},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["xp.addxp(userid",{"_index":105,"title":{},"body":{"index.html":{}}}],["xp.createmember(userid",{"_index":131,"title":{},"body":{"index.html":{}}}],["xp.deletemember(userid",{"_index":135,"title":{},"body":{"index.html":{}}}],["xp.init(\"mongourl",{"_index":99,"title":{},"body":{"index.html":{}}}],["xp.removexp(userid",{"_index":121,"title":{},"body":{"index.html":{}}}],["xpamount",{"_index":106,"title":{},"body":{"index.html":{}}}],["xpmember",{"_index":18,"title":{"interfaces/XPMember.html":{}},"body":{"interfaces/RankupEvents.html":{},"interfaces/XPMember.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["yarn",{"_index":85,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/RankupEvents.html":{"url":"interfaces/RankupEvents.html","title":"interface - RankupEvents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RankupEvents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            levelUp\n                                        \n                                \n                                \n                                        \n                                            rankUp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        levelUp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        levelUp:     [, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, ]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rankUp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rankUp:     [, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, ]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseInteraction, Message } from 'discord.js';\n\nexport interface XPMember {\n  UserID: string;\n  GuildID: string;\n  XP: number;\n  Level: number;\n}\n\n/**\n * @event DiscordRankup#levelUp\n * @param {XPMember} member The member who leveled up\n * @param {any} cause The cause of the level up, defined when a function affecting the xp is called\n */\n\n/**\n * @event DiscordRankup#rankUp\n * @param {XPMember} member The member who ranked up\n * @param {any} cause The cause of the rank up, defined when a function affecting the xp is called\n */\n\nexport interface RankupEvents {\n  levelUp: [member: XPMember, cause?: any];\n  rankUp: [member: XPMember, cause?: any];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XPMember.html":{"url":"interfaces/XPMember.html","title":"interface - XPMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XPMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            GuildID\n                                        \n                                \n                                \n                                        \n                                            Level\n                                        \n                                \n                                \n                                        \n                                            UserID\n                                        \n                                \n                                \n                                        \n                                            XP\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        GuildID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        GuildID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        XP\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        XP:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseInteraction, Message } from 'discord.js';\n\nexport interface XPMember {\n  UserID: string;\n  GuildID: string;\n  XP: number;\n  Level: number;\n}\n\n/**\n * @event DiscordRankup#levelUp\n * @param {XPMember} member The member who leveled up\n * @param {any} cause The cause of the level up, defined when a function affecting the xp is called\n */\n\n/**\n * @event DiscordRankup#rankUp\n * @param {XPMember} member The member who ranked up\n * @param {any} cause The cause of the rank up, defined when a function affecting the xp is called\n */\n\nexport interface RankupEvents {\n  levelUp: [member: XPMember, cause?: any];\n  rankUp: [member: XPMember, cause?: any];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/models/xpmember.ts\n            \n            variable\n            XPMember\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/types.ts\n            \n            interface\n            RankupEvents\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/types.ts\n            \n            interface\n            XPMember\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            discord.js : ^14.8.0\n        \n            mongoose : ^7.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDiscord-RankUP\nDiscord-RankUP is a package that allows you to create a rankup system for your discord bot.\nIt is very easy to use and has a many features to make your rankup system unique!\nNote: This package is in early development, not all features have been added yet!\nFeatures\n\nLightweight\nEasy to use\nCustomizable\nUses MongoDB\nBuilt for Discord.Js\n\nInstallation\nnpm install discord-rankup\nyarn add discord-rankup\npnpm add discord-rankupDocumentation\nView the documentation here\nBasic Usage\nFirst you need to initiate the Rankup Client.\nconst xp = require('discord-rankup');\n\nxp.init(\"MONGOURL\", client);Once that is done, you can start managing the user's XP.\nxp.addXP(userID, guildID, xpAmount, emitEvent, cause)\nuserID: The user's ID\nguildID: The guild's ID\nxpAmount: The amount of XP to add\nemitEvent (optional, true by default): Whether or not to emit the event if the user levels up\ncause (optional): The cause of the XP gain, can be any object, it will be emitted in the event\n\nxp.removeXP(userID, guildID, xpAmount, emitEvent, cause)xp.setXP(userID, guildID, xpAmount, emitEvent, cause)xp.fetchXP(userID, guildID)This will return a promise with the user's XP.\nIf you want to add the user to the database, you can use the following method.\nxp.createMember(userID, guildID)This will create a user in the database, if the user already exists, it will return false.\nxp.deleteMember(userID, guildID)This will delete the user from the database, if the user was deleted, it will return true.\nEvents\nDiscord-RankUP has a few events that you can use.\n\nlevelUp: Emitted when a user levels up\n(More to come)\n\nclient.on('levelUp', (XPMember, cause) => {\n    // Do something\n})Types\ninterface XPMember {\n    userID: string;\n    guildID: string;\n    xp: number;\n    level: number;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.9.3\n        \n            Description : A simple discord.js xp and level system\n        \n            Keywords : discord, discord.js, ranks, levels, xp\n        \n            Homepage : https://discord-rankup.js.org/\n        \n            Bugs : https://github.com/x404dev/discord-rankup/issues\n        \n            License : ISC\n        \n            Repository : https://github.com/x404dev/discord-rankup\n        \n            Author : x404dev\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            XPMember   (src/.../xpmember.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/models/xpmember.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        XPMember\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  UserID: { type: String, required: true },\n  GuildID: { type: String, required: true },\n  XP: { type: Number, required: true },\n  Level: { type: Number, required: true },\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
